#
# BINDING REQUIRE
#
# USER-SERVICE
# AUTH-SERVICE
# BOOK-SERVICE
# CHATTING-SERVICE
# ALARM-SERVICE
# REDIS-HOST
# REDIS-PORT
# JWT-SECRET

server:
  port: 9001

spring:
  cloud:
    gateway:  #gateway 설정
      default-filters:
        - name: GlobalFilter #Global Filter로 지정된 java 파일 이름
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true

      globalcors:
        cors-configurations:
          "[/**]":
            allowedOrigins:
              - "http://localhost:9001"
              - "https://k9c209.p.ssafy.io"

            allowedMethods:
              - GET
              - POST
              - DELETE
              - PUT
              - OPTIONS
              - DELETE
              - PATCH
            allowedHeaders: "*"
            allow-credentials: true

      routes:

        ## jwt token not required

        #회원가입
        - id: user-create
          uri: ${USER-SERVICE}
          predicates:
            - Path=/api/user-service/users
            - Method=POST
          filters:
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        #중복 아이디 체크
        - id: user-id-check
          uri: ${USER-SERVICE}
          predicates:
            - Path=/api/user-service/users/{loginId}
            - Method=GET
          filters:
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        #도서관 등록
        - id: library-create
          uri: ${BOOK-SERVICE}
          predicates:
            - Path=/api/book-service/libraries
            - Method=POST
          filters:
            - RewritePath=/book-service/(?<segment>.*), /$\{segment}

        #로그인
        - id: auth-login
          uri: ${AUTH-SERVICE}
          predicates:
            - Path=/api/auth-service/auths
            - Method=POST
          filters:
            - RewritePath=/auth-service/(?<segment>.*), /$\{segment}

        #인증번호 전송
        - id: sms-send
          uri: ${AUTH-SERVICE}
          predicates:
            - Path=/api/auth-service/sms
            - Method=POST
          filters:
            - RewritePath=/auth-service/(?<segment>.*), /$\{segment}

        #인증번호 확인
        - id: sms-check
          uri: ${AUTH-SERVICE}
          predicates:
            - Path=/api/auth-service/sms
            - Method=DELETE
          filters:
            - RewritePath=/auth-service/(?<segment>.*), /$\{segment}


        ## jwt token required


        - id: auth-service
          uri: ${AUTH-SERVICE}
          predicates:
            - Path=/api/auth-service/**
          filters:
            - RewritePath=/auth-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter

        - id: user-service
          uri: ${USER-SERVICE}
          predicates:
            - Path=/api/user-service/**
          filters:
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter

        - id: book-service
          uri: ${BOOK-SERVICE}
          predicates:
            - Path=/api/book-service/**
          filters:
            - RewritePath=/book-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter

        - id: chatting-service
          uri: ${CHATTING-SERVICE}
          predicates:
            - Path=/api/chatting-service/**
          filters:
            - RewritePath=/chatting-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter

        - id: alarm-service
          uri: ${ALARM-SERVICE}
          predicates:
            - Path=/api/alarm-service/**
          filters:
            - RewritePath=/alarm-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter

  redis:
    host: ${REDIS-HOST}
    port: ${REDIS-PORT}

jwt:
  secret: ${JWT-SECRET}